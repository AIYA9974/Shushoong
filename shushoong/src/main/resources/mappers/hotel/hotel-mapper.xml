<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kh.mclass.shushoong.hotel.model.repository.HotelRepository">

<!-- 검색한 호텔 리스트 띄우기 위한 SQL  -->
	<!-- 호텔 이름, 영어이름, 주소, 최저가(인원수 고려), 사진 1장 -->
	<select id="selectAllHotelList" parameterType="hashmap" resultType="HotelDtoRes">
		select hotel_code, hotel_name, hotel_eng, hotel_address, hotel_price, room_discount, hotel_pic, hotel_score, hotel_review_num
		from V_hotel_list 
		where SUBSTR(hotel_code, 1, 3) = #{code} and room_cap = #{people}
        <trim prefix="and">
	        <if test="keyword != null and keyword !='' ">
	        	<bind name="keyword2" value="'%' + keyword + '%'"/>
	        	hotel_name LIKE #{keyword2}
	        </if>
	        <if test="maxPrice != null and maxPrice !=''">
	        	hotel_price &lt;= ${maxPrice}
	        </if>
        </trim>
        <if test="sortBy != null and sortBy !='' ">
	       	<choose>
	       		<when test="sortBy.equals('price')">
	       			ORDER BY hotel_price
	       		</when>
	       		<when test="sortBy.equals('review')">
	       			ORDER BY hotel_price
	       		</when>
	       		<when test="sortBy.equals('grade')">
	       			ORDER BY hotel_score
	       		</when>
	       	</choose>
	       	<choose>
				<when test="sortTo != null and sortTo.equals('desc')">
					DESC
				</when>
 				<when test="sortTo != null and sortTo.equals('asc')">
					ASC
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 호텔 최고가(슬라이드바 표시용) -->
	<select id="selectMaxRoomlPrice" parameterType="hashmap" resultType="Integer">
	        select max(min_price) as hotel_price
			from hotel join (select hotel_code, max(hotel_discount) room_discount, MIN(hotel_price) min_price from hotel_room 
        	join hotel using(hotel_code) where SUBSTR(hotel_code, 1, 3) = #{code} and room_count > 0 and room_cap = #{people} group by hotel_code) using(hotel_code)
        	join (select distinct hotel_code, first_value(hotel_picture) over (partition by hotel_code) as hotel_pic from hotel_pic) using(hotel_code)
        	left join (select hotel_code, ROUND((f + c + co + k)/4, 1) as score from (
            	select hotel_code, avg(hotel_facility) f, avg(hotel_clean) c, avg(hotel_conven) co, avg(hotel_kind) k 
            	from hotel_review join hotel h using(hotel_code) where h.hotel_loc_cat= 'OS' group by hotel_code)) using(hotel_code)
            <if test="keyword != null and keyword !='' ">
	        	<bind name="keyword2" value="'%' + keyword + '%'"/>
	        	where hotel_name LIKE #{keyword2}
	        </if>
	</select>
	
	<select id="selectHotelPicList" parameterType="String" resultType="HotelPic">
		select hotel_picture from hotel_pic where hotel_code = #{hotelCode}
	</select>
	
	<select id="selectRoomList" parameterType="String" resultType="HotelRoomDto">
		select room_cat, hotel_price, room_att from hotel_room where hotel_code = #{hotelCode}		
	</select>
	
	<select id="selectHotelSearchList" parameterType="String" resultType="HotelSearchDtoRes">
		select hotel_name, hotel_eng, hotel_address, hotel_call, hotel_check_in, hotel_check_out, hotel_policy, hotel_intro from hotel where hotel_code = #{hotelCode}
	</select>
	
	<!-- 편의시설 -->
	<select id="selectHotelFacility" parameterType="String" resultType="HotelFacilityDtoRes">
		select * from hotel_facility where hotel_code = #{hotelCode}
	</select>
	
	<!-- 작성된 리뷰 불러오기 -->
	<select id="selectReviewDetailList" parameterType="String" resultType="HotelReviewDtoRes">
		select user_id, tripper_cat, review_title, review_comment, SUBSTR(hotel_reserve_code, 1, 4) || '년 ' || SUBSTR(hotel_reserve_code, 5, 2) || '월 ' || SUBSTR(hotel_reserve_code, 7, 2) || '일' as review_date, 
		hotel_facility, hotel_clean, hotel_conven, hotel_kind, (hotel_facility + hotel_clean + hotel_conven + hotel_kind)/4 as rate_avg
		from hotel_review 
			join hotel_reserve hr using (hotel_reserve_code)
		where hr.hotel_code = #{hotelCode}
	</select>
	
	<!-- 호텔에 달린 모든 리뷰에 대한 평균 및 총 리뷰 갯수 -->
 	<select id="selectReviewOverall" parameterType="String" resultType="HotelReviewOverallDtoRes">
		select count(*) as review_count, avg(hotel_facility) as avg_facility, avg(hotel_clean) as avg_hotel_clean, avg(hotel_conven) as avg_hotel_conven, avg(hotel_kind) as avg_hotel_kind, 
	        (avg(hotel_facility) + avg(hotel_clean) + avg(hotel_conven) + avg(hotel_kind))/4 as avg_all_rate
		from hotel_review
		    join hotel_reserve hr using (hotel_reserve_code)
		where hr.hotel_code = #{hotelCode}
	</select>

	
</mapper>