<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kh.mclass.shushoong.mypage.business.model.repository.MypageBusinessRepository">
	
	<!-- 내정보 표시 -->
	<select id="selectOne" parameterType="string" resultType="MemberDto">
	SELECT USER_ID,USER_NAME,USER_EMAIL FROM MEMBER WHERE USER_ID=#{userId}
	</select>
	
	<!-- 패스워드 체킹 -->
	<select id="pwdChecking" resultType="String">
		SELECT USER_PWD FROM MEMBER WHERE USER_ID=#{userId}
	</select>
	
	<!-- 패스워드 변경 -->
	<update id="resetPwd">
		UPDATE MEMBER SET USER_PWD=#{userPwd} WHERE USER_ID=#{userId}
	</update>
	
	<!-- 사업장 리스트 -->
	<select id="selectMyProduct" parameterType="hashmap" resultType="ProductDtoRes">
		select hotel_code, h.hotel_name hotel_name, hotel_eng, hotel_address, hotel_call, hotel_check_in, hotel_check_out,
			hotel_policy, hotel_intro, hotel_pcount, hotel_loc_cat, hotel_safety, user_id
			from hotel h join business_member bm using (business_certi)
			where user_id = #{id}
		<if test="keyword != null and keyword !=''">
			<bind name="keyword4" value="'%' + keyword + '%'" />
			and h.hotel_name like #{keyword4}
		</if>
	</select>
	
	<!-- 사업장 갯수 조회(페이징용) -->
	<select id="selectMyAllProductCount" parameterType="hashmap" resultType="int">
		select count(*) count from hotel h join business_member bm using (business_certi)  
		<if test="keyword != null and keyword !=''">
			<bind name="keyword4" value="'%' + keyword + '%'" />
			where h.hotel_name like #{keyword4}
		</if>
	</select>
	
	<!-- 호텔 삭제 테이블로 이동-->
	<insert id="insertHotelDeleted" parameterType="String">
		insert into hotel_deleted 
			select hotel_code, hotel_name, HOTEL_ENG, HOTEL_ADDRESS, HOTEL_CALL, HOTEL_CHECK_IN, HOTEL_CHECK_OUT, HOTEL_POLICY,
			HOTEL_INTRO, HOTEL_SAFETY, HOTEL_PCOUNT, HOTEL_LOC_CAT, BUSINESS_CERTI
			from hotel where hotel_code = #{hotelCode}
	</insert>
	
	<!-- 기존 호텔테이블에서 삭제 -->
	<delete id="deleteHotel" parameterType="String">
		delete from hotel where hotel_code = #{hotelCode}
	</delete>
	
	
	<!-- 호텔 사업자 등록 -->
	<insert id="insertCerti" parameterType="hashmap">
		insert into business_member values (#{businessCerti}, #{businessRegit}, #{userId})
	</insert>
	
	<!-- 호텔 등록 -->
	<insert id="insertHotel" parameterType="HotelReqDto">
		<bind name="code" value="hotelCode + '%'"/>
		insert into hotel values (
			#{hotelCode}||(select to_char(NVL(MAX(substr(hotel_code,4,3)), -1) +1, 'FM000') from hotel where hotel_code like #{code}),
			#{hotelName}, #{hotelEng}, #{hotelAddress}, #{hotelCall}, #{checkIn}, #{checkOut}, #{hotelPolicy},
			#{hotelIntro}, DEFAULT, #{hotelLocCat}, #{businessCerti}, #{hotelSafety}
			)
		<selectKey keyProperty="hotelCode" resultType="String" order="AFTER">
			select hotel_code from hotel where business_certi = #{businessCerti}
		</selectKey>
	</insert>
	
	<!-- 호텔 사진 등록-->
	<insert id="insertHotelPic" parameterType="hashMap">
    	insert all 
	    <foreach collection="urls" item="pic" separator=" ">
	        into hotel_pic VALUES (#{pic}, #{hotelCode})
	    </foreach>
	    select * from dual
	</insert>

	<!-- 호텔 편의 시설 등록-->
	<insert id="insertHotelFac" parameterType="hashMap">
		insert all 
		<foreach collection="hotelFacs" item="fac" separator=" ">
			into hotel_facility values (#{fac}, #{hotelCode})
		</foreach>
		select * from dual
	</insert>

	<!-- 호텔 방 등록-->
	<insert id="insertHotelRoom" parameterType="hashMap">
		insert all 
		<foreach collection="rooms" item="room" separator=" ">
			into hotel_room values (#{room.roomCat}, #{room.roomCap}, #{room.roomAtt}, #{hotelCode}, #{room.hotelPrice}, 0, #{room.roomCount})
		</foreach>
		select * from dual
	</insert>
</mapper>